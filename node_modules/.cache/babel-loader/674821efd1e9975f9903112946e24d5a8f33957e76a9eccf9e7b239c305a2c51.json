{"ast":null,"code":"var _jsxFileName = \"/Users/markvadimov/Desktop/bsu/react/notion/src/components/Login.js\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Получение данных о пользователе из db.json\n      const response = await fetch('../server/db.json'); // Замените на реальный путь\n      const data = JSON.parse(await response.text());\n\n      // Проверяем, является ли data объектом (иначе ошибка)\n      if (typeof data !== 'object' || data === null) {\n        console.error('Ошибка чтения базы данных. Ожидался объект, получен:', data);\n        return;\n      }\n\n      // Поиск пользователя по введенной электронной почте и паролю\n      const user = data.users.find(user => user.email === email && user.password === password);\n      if (user) {\n        // Если аутентификация успешна, вызываем функцию onLogin с данными пользователя\n        onLogin(user);\n      } else {\n        // Обработка ошибки входа\n        console.error('Неверные учетные данные');\n      }\n    } catch (error) {\n      console.error('Ошибка чтения базы данных:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","email","setEmail","password","setPassword","handleLogin","e","preventDefault","response","fetch","data","JSON","parse","text","console","error","user","users","find","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/components/Login.js"],"sourcesContent":["// Login.js\nimport React, { useState } from 'react';\n\nconst Login = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Получение данных о пользователе из db.json\nconst response = await fetch('../server/db.json'); // Замените на реальный путь\nconst data = JSON.parse(await response.text());\n\n// Проверяем, является ли data объектом (иначе ошибка)\nif (typeof data !== 'object' || data === null) {\n  console.error('Ошибка чтения базы данных. Ожидался объект, получен:', data);\n  return;\n}\n\n\n      // Поиск пользователя по введенной электронной почте и паролю\n      const user = data.users.find((user) => user.email === email && user.password === password);\n\n      if (user) {\n        // Если аутентификация успешна, вызываем функцию onLogin с данными пользователя\n        onLogin(user);\n      } else {\n        // Обработка ошибки входа\n        console.error('Неверные учетные данные');\n      }\n    } catch (error) {\n      console.error('Ошибка чтения базы данных:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Авторизация</h1>\n      <form onSubmit={handleLogin}>\n        <label>\n          Электронная почта:\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        </label>\n        <br />\n        <label>\n          Пароль:\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n        <br />\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}