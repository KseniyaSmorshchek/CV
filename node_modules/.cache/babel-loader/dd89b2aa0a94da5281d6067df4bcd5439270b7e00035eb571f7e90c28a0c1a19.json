{"ast":null,"code":"var _jsxFileName = \"/Users/markvadimov/Desktop/bsu/react/notion/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\n// LoginForm.js\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { usersData } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n  const onSubmit = data => {\n    // Проверяем, существует ли пользователь с введенным email\n    const user = usersData.find(user => user.email === data.email);\n    if (user) {\n      // Проверяем совпадение паролей (в реальном приложении используйте хэширование)\n      if (user.password === data.password) {\n        console.log('Login successful');\n        // Переход на другую страницу после успешного входа\n        history.push('/notes');\n      } else {\n        console.log('Incorrect password');\n      }\n    } else {\n      console.log('User not found');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      ref: register({\n        required: true,\n        pattern: /^\\S+@\\S+$/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required and must be a valid email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      ref: register({\n        required: true,\n        minLength: 6\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required and must be at least 6 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"OxBzvLvyqkluHWa37TdHftQcVy0=\", false, function () {\n  return [useForm, useHistory];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useForm","useHistory","usersData","jsxDEV","_jsxDEV","LoginForm","_s","register","handleSubmit","errors","history","onSubmit","data","user","find","email","password","console","log","push","children","fileName","_jsxFileName","lineNumber","columnNumber","name","ref","required","pattern","type","minLength","_c","$RefreshReg$"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/components/LoginForm.js"],"sourcesContent":["// LoginForm.js\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { usersData } from '../data';\n\nconst LoginForm = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const history = useHistory();\n\n  const onSubmit = (data) => {\n    // Проверяем, существует ли пользователь с введенным email\n    const user = usersData.find((user) => user.email === data.email);\n\n    if (user) {\n      // Проверяем совпадение паролей (в реальном приложении используйте хэширование)\n      if (user.password === data.password) {\n        console.log('Login successful');\n        // Переход на другую страницу после успешного входа\n        history.push('/notes');\n      } else {\n        console.log('Incorrect password');\n      }\n    } else {\n      console.log('User not found');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <label>Email:</label>\n      <input name=\"email\" ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} />\n      {errors.email && <span>This field is required and must be a valid email.</span>}\n\n      <label>Password:</label>\n      <input name=\"password\" type=\"password\" ref={register({ required: true, minLength: 6 })} />\n      {errors.password && <span>This field is required and must be at least 6 characters.</span>}\n\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAGT,OAAO,CAAC,CAAC;EACpD,MAAMU,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5B,MAAMU,QAAQ,GAAIC,IAAI,IAAK;IACzB;IACA,MAAMC,IAAI,GAAGX,SAAS,CAACY,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,KAAK,KAAKH,IAAI,CAACG,KAAK,CAAC;IAEhE,IAAIF,IAAI,EAAE;MACR;MACA,IAAIA,IAAI,CAACG,QAAQ,KAAKJ,IAAI,CAACI,QAAQ,EAAE;QACnCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/B;QACAR,OAAO,CAACS,IAAI,CAAC,QAAQ,CAAC;MACxB,CAAC,MAAM;QACLF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACnC;IACF,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEd,OAAA;IAAMO,QAAQ,EAAEH,YAAY,CAACG,QAAQ,CAAE;IAAAS,QAAA,gBACrChB,OAAA;MAAAgB,QAAA,EAAO;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrBpB,OAAA;MAAOqB,IAAI,EAAC,OAAO;MAACC,GAAG,EAAEnB,QAAQ,CAAC;QAAEoB,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAa,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/Ef,MAAM,CAACM,KAAK,iBAAIX,OAAA;MAAAgB,QAAA,EAAM;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE/EpB,OAAA;MAAAgB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBpB,OAAA;MAAOqB,IAAI,EAAC,UAAU;MAACI,IAAI,EAAC,UAAU;MAACH,GAAG,EAAEnB,QAAQ,CAAC;QAAEoB,QAAQ,EAAE,IAAI;QAAEG,SAAS,EAAE;MAAE,CAAC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzFf,MAAM,CAACO,QAAQ,iBAAIZ,OAAA;MAAAgB,QAAA,EAAM;IAAyD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE1FpB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAAClB,EAAA,CAnCID,SAAS;EAAA,QAC8BL,OAAO,EAClCC,UAAU;AAAA;AAAA8B,EAAA,GAFtB1B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}