{"ast":null,"code":"var _jsxFileName = \"/Users/markvadimov/Desktop/bsu/react/notion/src/pages/RegistrationPage.js\",\n  _s = $RefreshSig$();\n// RegistrationPage.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [age, setAge] = useState('');\n  const [gender, setGender] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const [genderError, setGenderError] = useState('');\n  const [registrationError, setRegistrationError] = useState('');\n  const isPasswordValid = () => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const isEmailValid = () => {\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    return emailRegex.test(email);\n  };\n  const handleOnChange = () => {\n    setEmailError('');\n    setPasswordError('');\n    setConfirmPasswordError('');\n    setGenderError('');\n    setRegistrationError('');\n  };\n  const handleRegistration = async () => {\n    if (!isEmailValid()) {\n      setEmailError('Введите корректный email.');\n      return;\n    }\n    if (!isPasswordValid()) {\n      setPasswordError('Пароль не соответствует требованиям.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setConfirmPasswordError('Пароли не совпадают.');\n      return;\n    }\n    if (!gender) {\n      setGenderError('Выберите пол.');\n      return;\n    }\n    try {\n      // Проверка уникальности email перед регистрацией\n      const emailCheckResponse = await fetch(`http://localhost:5000/checkEmail?email=${email}`);\n      const emailCheckResult = await emailCheckResponse.json();\n      if (!emailCheckResult.unique) {\n        setEmailError('Аккаунт с такой почтой уже существует.');\n        return;\n      }\n      const response = await fetch('http://localhost:5000/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          confirmPassword,\n          name,\n          nickname,\n          age,\n          gender,\n          avatar\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(`Ошибка регистрации: ${errorData.error}`);\n        setRegistrationError(`Ошибка регистрации: ${errorData.error}`);\n        return;\n      }\n      const newUser = await response.json();\n      console.log('Зарегистрирован пользователь:', newUser);\n    } catch (error) {\n      console.error(`Ошибка регистрации: ${error.message}`);\n      setRegistrationError(`Ошибка регистрации: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 24\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }, this), confirmPasswordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: confirmPasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 34\n      }, this), genderError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: genderError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this), registrationError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: registrationError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"LCd4WVDYO4cXAWBJmfDj4RczO7c=\");\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegistrationPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","nickname","setNickname","age","setAge","gender","setGender","avatar","setAvatar","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","genderError","setGenderError","registrationError","setRegistrationError","isPasswordValid","passwordRegex","test","isEmailValid","emailRegex","handleOnChange","handleRegistration","emailCheckResponse","fetch","emailCheckResult","json","unique","response","method","headers","body","JSON","stringify","ok","errorData","console","error","newUser","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/pages/RegistrationPage.js"],"sourcesContent":["// RegistrationPage.js\nimport React, { useState } from 'react';\n\nconst RegistrationPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [age, setAge] = useState('');\n  const [gender, setGender] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const [genderError, setGenderError] = useState('');\n  const [registrationError, setRegistrationError] = useState('');\n\n  const isPasswordValid = () => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n    return passwordRegex.test(password);\n  };\n\n  const isEmailValid = () => {\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    return emailRegex.test(email);\n  };\n\n  const handleOnChange = () => {\n    setEmailError('');\n    setPasswordError('');\n    setConfirmPasswordError('');\n    setGenderError('');\n    setRegistrationError('');\n  };\n\n  const handleRegistration = async () => {\n    if (!isEmailValid()) {\n      setEmailError('Введите корректный email.');\n      return;\n    }\n\n    if (!isPasswordValid()) {\n      setPasswordError('Пароль не соответствует требованиям.');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setConfirmPasswordError('Пароли не совпадают.');\n      return;\n    }\n\n    if (!gender) {\n      setGenderError('Выберите пол.');\n      return;\n    }\n\n    try {\n      // Проверка уникальности email перед регистрацией\n      const emailCheckResponse = await fetch(`http://localhost:5000/checkEmail?email=${email}`);\n      const emailCheckResult = await emailCheckResponse.json();\n\n      if (!emailCheckResult.unique) {\n        setEmailError('Аккаунт с такой почтой уже существует.');\n        return;\n      }\n\n      const response = await fetch('http://localhost:5000/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          confirmPassword,\n          name,\n          nickname,\n          age,\n          gender,\n          avatar,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(`Ошибка регистрации: ${errorData.error}`);\n        setRegistrationError(`Ошибка регистрации: ${errorData.error}`);\n        return;\n      }\n\n      const newUser = await response.json();\n      console.log('Зарегистрирован пользователь:', newUser);\n    } catch (error) {\n      console.error(`Ошибка регистрации: ${error.message}`);\n      setRegistrationError(`Ошибка регистрации: ${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Регистрация</h2>\n      <form>\n        {/* ... (прежние поля) */}\n        {emailError && <div style={{ color: 'red' }}>{emailError}</div>}\n        {passwordError && <div style={{ color: 'red' }}>{passwordError}</div>}\n        {confirmPasswordError && <div style={{ color: 'red' }}>{confirmPasswordError}</div>}\n        {genderError && <div style={{ color: 'red' }}>{genderError}</div>}\n        {registrationError && <div style={{ color: 'red' }}>{registrationError}</div>}\n        {/* ... (прежние элементы формы) */}\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}