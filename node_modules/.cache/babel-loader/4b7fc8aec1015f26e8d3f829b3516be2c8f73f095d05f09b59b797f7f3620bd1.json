{"ast":null,"code":"// actions.js\nexport const SET_USER = 'SET_USER';\nexport const ADD_NOTE = 'ADD_NOTE';\nexport const EDIT_NOTE = 'EDIT_NOTE';\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const SET_ERROR = 'SET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\nexport const SET_LOADING = 'SET_LOADING';\nexport const FETCH_NOTE_DATA = 'FETCH_NOTE_DATA';\nexport const fetchNoteData = noteId => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await fetch(`http://localhost:5001/notes/${noteId}`);\n    dispatch(setLoading(false));\n    if (response.ok) {\n      const fetchedNote = await response.json();\n      dispatch(setNote(fetchedNote));\n    } else {\n      dispatch(setError(\"Failed to fetch note data\"));\n    }\n  } catch (error) {\n    dispatch(setLoading(false));\n    dispatch(setError(`Error fetching note data: ${error}`));\n  }\n};\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nexport const addNote = note => ({\n  type: ADD_NOTE,\n  payload: note\n});\nexport const editNote = (id, updatedNoteData) => ({\n  type: EDIT_NOTE,\n  payload: {\n    id,\n    updatedNoteData\n  }\n});\nexport const deleteNote = id => ({\n  type: DELETE_NOTE,\n  payload: id\n});\nexport const setError = error => ({\n  type: SET_ERROR,\n  payload: error\n});\nexport const clearError = () => ({\n  type: CLEAR_ERROR\n});\nexport const setLoading = isLoading => ({\n  type: SET_LOADING,\n  payload: isLoading\n});","map":{"version":3,"names":["SET_USER","ADD_NOTE","EDIT_NOTE","DELETE_NOTE","SET_ERROR","CLEAR_ERROR","SET_LOADING","FETCH_NOTE_DATA","fetchNoteData","noteId","dispatch","setLoading","response","fetch","ok","fetchedNote","json","setNote","setError","error","setUser","user","type","payload","addNote","note","editNote","id","updatedNoteData","deleteNote","clearError","isLoading"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/redux/actions.js"],"sourcesContent":["// actions.js\nexport const SET_USER = 'SET_USER';\nexport const ADD_NOTE = 'ADD_NOTE';\nexport const EDIT_NOTE = 'EDIT_NOTE';\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const SET_ERROR = 'SET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\nexport const SET_LOADING = 'SET_LOADING';\nexport const FETCH_NOTE_DATA = 'FETCH_NOTE_DATA';\n\nexport const fetchNoteData = (noteId) => async (dispatch) => {\n  try {\n    dispatch(setLoading(true));\n    const response = await fetch(`http://localhost:5001/notes/${noteId}`);\n    dispatch(setLoading(false));\n\n    if (response.ok) {\n      const fetchedNote = await response.json();\n      dispatch(setNote(fetchedNote));\n    } else {\n      dispatch(setError(\"Failed to fetch note data\"));\n    }\n  } catch (error) {\n    dispatch(setLoading(false));\n    dispatch(setError(`Error fetching note data: ${error}`));\n  }\n};\n\nexport const setUser = (user) => ({\n  type: SET_USER,\n  payload: user,\n});\n\nexport const addNote = (note) => ({\n  type: ADD_NOTE,\n  payload: note,\n});\n\nexport const editNote = (id, updatedNoteData) => ({\n  type: EDIT_NOTE,\n  payload: { id, updatedNoteData },\n});\n\nexport const deleteNote = (id) => ({\n  type: DELETE_NOTE,\n  payload: id,\n});\n\nexport const setError = (error) => ({\n  type: SET_ERROR,\n  payload: error,\n});\n\nexport const clearError = () => ({\n  type: CLEAR_ERROR,\n});\n\nexport const setLoading = (isLoading) => ({\n  type: SET_LOADING,\n  payload: isLoading,\n});\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAEhD,OAAO,MAAMC,aAAa,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAC3D,IAAI;IACFA,QAAQ,CAACC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BJ,MAAO,EAAC,CAAC;IACrEC,QAAQ,CAACC,UAAU,CAAC,KAAK,CAAC,CAAC;IAE3B,IAAIC,QAAQ,CAACE,EAAE,EAAE;MACf,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACzCN,QAAQ,CAACO,OAAO,CAACF,WAAW,CAAC,CAAC;IAChC,CAAC,MAAM;MACLL,QAAQ,CAACQ,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IACjD;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,QAAQ,CAACC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3BD,QAAQ,CAACQ,QAAQ,CAAE,6BAA4BC,KAAM,EAAC,CAAC,CAAC;EAC1D;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAChCC,IAAI,EAAEtB,QAAQ;EACduB,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,OAAO,GAAIC,IAAI,KAAM;EAChCH,IAAI,EAAErB,QAAQ;EACdsB,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGA,CAACC,EAAE,EAAEC,eAAe,MAAM;EAChDN,IAAI,EAAEpB,SAAS;EACfqB,OAAO,EAAE;IAAEI,EAAE;IAAEC;EAAgB;AACjC,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAIF,EAAE,KAAM;EACjCL,IAAI,EAAEnB,WAAW;EACjBoB,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMT,QAAQ,GAAIC,KAAK,KAAM;EAClCG,IAAI,EAAElB,SAAS;EACfmB,OAAO,EAAEJ;AACX,CAAC,CAAC;AAEF,OAAO,MAAMW,UAAU,GAAGA,CAAA,MAAO;EAC/BR,IAAI,EAAEjB;AACR,CAAC,CAAC;AAEF,OAAO,MAAMM,UAAU,GAAIoB,SAAS,KAAM;EACxCT,IAAI,EAAEhB,WAAW;EACjBiB,OAAO,EAAEQ;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}