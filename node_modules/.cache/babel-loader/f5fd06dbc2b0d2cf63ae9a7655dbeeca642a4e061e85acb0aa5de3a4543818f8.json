{"ast":null,"code":"import { SET_USER, ADD_NOTE, EDIT_NOTE, DELETE_NOTE, SET_ERROR, CLEAR_ERROR, SET_LOADING, SET_NOTE, FETCH_NOTE_DATA } from './actions';\nconst initialState = {\n  user: null,\n  note: null,\n  // Добавлен note в начальное состояние\n  error: null,\n  isLoading: false\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        ...state,\n        user: action.payload\n      };\n    case ADD_NOTE:\n      return {\n        ...state,\n        notes: [...state.notes, action.payload]\n      };\n    case EDIT_NOTE:\n      const updatedNotes = state.notes.map(note => note.id === action.payload.id ? {\n        ...note,\n        ...action.payload.updatedNoteData\n      } : note);\n      return {\n        ...state,\n        notes: updatedNotes\n      };\n    case DELETE_NOTE:\n      const filteredNotes = state.notes.filter(note => note.id !== action.payload);\n      return {\n        ...state,\n        notes: filteredNotes\n      };\n    case SET_NOTE:\n      return {\n        ...state,\n        notes: [...state.notes, action.payload]\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case FETCH_NOTE_DATA:\n      const {\n        noteId,\n        noteData\n      } = action.payload;\n      const updatedNotesForFetch = state.notes.map(note => note.id === noteId ? {\n        ...note,\n        ...noteData\n      } : note);\n      return {\n        ...state,\n        notes: updatedNotesForFetch\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["SET_USER","ADD_NOTE","EDIT_NOTE","DELETE_NOTE","SET_ERROR","CLEAR_ERROR","SET_LOADING","SET_NOTE","FETCH_NOTE_DATA","initialState","user","note","error","isLoading","rootReducer","state","action","type","payload","notes","updatedNotes","map","id","updatedNoteData","filteredNotes","filter","noteId","noteData","updatedNotesForFetch"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/redux/reducers.js"],"sourcesContent":["import {\n          SET_USER,\n          ADD_NOTE,\n          EDIT_NOTE,\n          DELETE_NOTE,\n          SET_ERROR,\n          CLEAR_ERROR,\n          SET_LOADING,\n          SET_NOTE,\n          FETCH_NOTE_DATA, \n        } from './actions';\n        \n        const initialState = {\n          user: null,\n          note: null, // Добавлен note в начальное состояние\n          error: null,\n          isLoading: false,\n        };\n        const rootReducer = (state = initialState, action) => {\n          switch (action.type) {\n            case SET_USER:\n              return {\n                ...state,\n                user: action.payload,\n              };\n            case ADD_NOTE:\n              return {\n                ...state,\n                notes: [...state.notes, action.payload],\n              };\n            case EDIT_NOTE:\n              const updatedNotes = state.notes.map((note) =>\n                note.id === action.payload.id ? { ...note, ...action.payload.updatedNoteData } : note\n              );\n        \n              return {\n                ...state,\n                notes: updatedNotes,\n              };\n            case DELETE_NOTE:\n              const filteredNotes = state.notes.filter((note) => note.id !== action.payload);\n        \n              return {\n                ...state,\n                notes: filteredNotes,\n              };\n            case SET_NOTE:\n              return {\n                ...state,\n                notes: [...state.notes, action.payload],\n              };\n            case SET_ERROR:\n              return {\n                ...state,\n                error: action.payload,\n              };\n            case CLEAR_ERROR:\n              return {\n                ...state,\n                error: null,\n              };\n            case SET_LOADING:\n              return {\n                ...state,\n                isLoading: action.payload,\n              };\n            case FETCH_NOTE_DATA:\n              const { noteId, noteData } = action.payload;\n              const updatedNotesForFetch = state.notes.map((note) =>\n                note.id === noteId ? { ...note, ...noteData } : note\n              );\n        \n              return {\n                ...state,\n                notes: updatedNotesForFetch,\n              };\n            default:\n              return state;\n          }\n        };\n        \n        export default rootReducer;\n        "],"mappings":"AAAA,SACUA,QAAQ,EACRC,QAAQ,EACRC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,QAAQ,EACRC,eAAe,QACV,WAAW;AAElB,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,IAAI;EAAE;EACZC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE;AACb,CAAC;AACD,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKjB,QAAQ;MACX,OAAO;QACL,GAAGe,KAAK;QACRL,IAAI,EAAEM,MAAM,CAACE;MACf,CAAC;IACH,KAAKjB,QAAQ;MACX,OAAO;QACL,GAAGc,KAAK;QACRI,KAAK,EAAE,CAAC,GAAGJ,KAAK,CAACI,KAAK,EAAEH,MAAM,CAACE,OAAO;MACxC,CAAC;IACH,KAAKhB,SAAS;MACZ,MAAMkB,YAAY,GAAGL,KAAK,CAACI,KAAK,CAACE,GAAG,CAAEV,IAAI,IACxCA,IAAI,CAACW,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,GAAG;QAAE,GAAGX,IAAI;QAAE,GAAGK,MAAM,CAACE,OAAO,CAACK;MAAgB,CAAC,GAAGZ,IACnF,CAAC;MAED,OAAO;QACL,GAAGI,KAAK;QACRI,KAAK,EAAEC;MACT,CAAC;IACH,KAAKjB,WAAW;MACd,MAAMqB,aAAa,GAAGT,KAAK,CAACI,KAAK,CAACM,MAAM,CAAEd,IAAI,IAAKA,IAAI,CAACW,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;MAE9E,OAAO;QACL,GAAGH,KAAK;QACRI,KAAK,EAAEK;MACT,CAAC;IACH,KAAKjB,QAAQ;MACX,OAAO;QACL,GAAGQ,KAAK;QACRI,KAAK,EAAE,CAAC,GAAGJ,KAAK,CAACI,KAAK,EAAEH,MAAM,CAACE,OAAO;MACxC,CAAC;IACH,KAAKd,SAAS;MACZ,OAAO;QACL,GAAGW,KAAK;QACRH,KAAK,EAAEI,MAAM,CAACE;MAChB,CAAC;IACH,KAAKb,WAAW;MACd,OAAO;QACL,GAAGU,KAAK;QACRH,KAAK,EAAE;MACT,CAAC;IACH,KAAKN,WAAW;MACd,OAAO;QACL,GAAGS,KAAK;QACRF,SAAS,EAAEG,MAAM,CAACE;MACpB,CAAC;IACH,KAAKV,eAAe;MAClB,MAAM;QAAEkB,MAAM;QAAEC;MAAS,CAAC,GAAGX,MAAM,CAACE,OAAO;MAC3C,MAAMU,oBAAoB,GAAGb,KAAK,CAACI,KAAK,CAACE,GAAG,CAAEV,IAAI,IAChDA,IAAI,CAACW,EAAE,KAAKI,MAAM,GAAG;QAAE,GAAGf,IAAI;QAAE,GAAGgB;MAAS,CAAC,GAAGhB,IAClD,CAAC;MAED,OAAO;QACL,GAAGI,KAAK;QACRI,KAAK,EAAES;MACT,CAAC;IACH;MACE,OAAOb,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}