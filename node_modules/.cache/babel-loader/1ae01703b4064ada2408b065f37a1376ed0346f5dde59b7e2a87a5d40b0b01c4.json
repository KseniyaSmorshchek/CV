{"ast":null,"code":"var _jsxFileName = \"/Users/markvadimov/Desktop/bsu/react/notion/src/routes/EditNote.jsx\",\n  _s = $RefreshSig$();\n// EditNote.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { fetchNoteData, updateNote } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditNote = () => {\n  _s();\n  const {\n    noteId\n  } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Замените 'note' на имя вашего свойства, содержащего данные заметки\n  const note = useSelector(state => state.notes.find(n => n.id === noteId));\n  const [updatedNote, setUpdatedNote] = useState({\n    // Используйте дополнительные свойства заметки\n    title: note.title || '',\n    content: note.content || ''\n  });\n  useEffect(() => {\n    dispatch(fetchNoteData(noteId));\n  }, [dispatch, noteId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedNote({\n      ...updatedNote,\n      [name]: value\n    });\n  };\n  const handleUpdateNote = () => {\n    if (!note) {\n      // Обработка случая, если заметка не найдена\n      console.error('Note not found');\n      return;\n    }\n\n    // Проверка на наличие свойства 'createdAt'\n    if (!note.createdAt) {\n      console.error('Note createdAt is not defined');\n      return;\n    }\n\n    // Обновление заметки\n    dispatch(updateNote(noteId, {\n      ...updatedNote,\n      createdAt: note.createdAt\n    }));\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: updatedNote.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        value: updatedNote.content,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateNote,\n      children: \"Update Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(EditNote, \"rkMUwRrLznX0iT5Y+ySY+jqsFAA=\", false, function () {\n  return [useParams, useDispatch, useHistory, useSelector];\n});\n_c = EditNote;\nexport default EditNote;\nvar _c;\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","useParams","fetchNoteData","updateNote","jsxDEV","_jsxDEV","EditNote","_s","noteId","dispatch","history","note","state","notes","find","n","id","updatedNote","setUpdatedNote","title","content","handleInputChange","e","name","value","target","handleUpdateNote","console","error","createdAt","push","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/routes/EditNote.jsx"],"sourcesContent":["// EditNote.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { fetchNoteData, updateNote } from '../redux/actions';\r\n\r\nconst EditNote = () => {\r\n  const { noteId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Замените 'note' на имя вашего свойства, содержащего данные заметки\r\n  const note = useSelector((state) => state.notes.find((n) => n.id === noteId));\r\n\r\n  const [updatedNote, setUpdatedNote] = useState({\r\n    // Используйте дополнительные свойства заметки\r\n    title: note.title || '',\r\n    content: note.content || '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNoteData(noteId));\r\n  }, [dispatch, noteId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedNote({\r\n      ...updatedNote,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdateNote = () => {\r\n    if (!note) {\r\n      // Обработка случая, если заметка не найдена\r\n      console.error('Note not found');\r\n      return;\r\n    }\r\n\r\n    // Проверка на наличие свойства 'createdAt'\r\n    if (!note.createdAt) {\r\n      console.error('Note createdAt is not defined');\r\n      return;\r\n    }\r\n\r\n    // Обновление заметки\r\n    dispatch(updateNote(noteId, { ...updatedNote, createdAt: note.createdAt }));\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Note</h2>\r\n      <label>\r\n        Title:\r\n        <input type=\"text\" name=\"title\" value={updatedNote.title} onChange={handleInputChange} />\r\n      </label>\r\n      <label>\r\n        Content:\r\n        <textarea name=\"content\" value={updatedNote.content} onChange={handleInputChange} />\r\n      </label>\r\n      <button onClick={handleUpdateNote}>Update Note</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNote;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}