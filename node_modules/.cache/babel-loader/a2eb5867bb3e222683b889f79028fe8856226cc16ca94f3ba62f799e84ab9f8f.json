{"ast":null,"code":"var _jsxFileName = \"/Users/markvadimov/Desktop/bsu/react/notion/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport PrivateRoute from './components/PrivateRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const handleLogin = userData => {\n    // В реальном приложении здесь следует реализовать проверку пользователя на сервере\n    // Пока просто предположим, что вход успешен\n    setAuthenticated(true);\n  };\n  const handleLogout = () => {\n    // В реальном приложении здесь следует реализовать выход пользователя\n    // Пока просто предположим, что выход успешен\n    setAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 22\n          }, this),\n          isAuthenticated: isAuthenticated,\n          fallbackPath: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5SSB8E6XvROKDUFw38DKoZLgQsI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","HomePage","LoginPage","PrivateRoute","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setAuthenticated","handleLogin","userData","handleLogout","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","fallbackPath","to","replace","_c","$RefreshReg$"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport PrivateRoute from './components/PrivateRoute';\n\nconst App = () => {\n  const [isAuthenticated, setAuthenticated] = useState(false);\n\n  const handleLogin = (userData) => {\n    // В реальном приложении здесь следует реализовать проверку пользователя на сервере\n    // Пока просто предположим, что вход успешен\n    setAuthenticated(true);\n  };\n\n  const handleLogout = () => {\n    // В реальном приложении здесь следует реализовать выход пользователя\n    // Пока просто предположим, что выход успешен\n    setAuthenticated(false);\n  };\n\n  return (\n    <Router>\n      <div>\n        <Routes>\n          {/* Начальная страница - страница входа */}\n          <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n          \n          {/* Защищенный маршрут для домашней страницы */}\n          <PrivateRoute\n            path=\"/\"\n            element={<HomePage onLogout={handleLogout} />}\n            isAuthenticated={isAuthenticated}\n            fallbackPath=\"/login\"\n          />\n\n          {/* Добавим перенаправление на страницу входа, если маршрут не существует */}\n          <Route path=\"/*\" element={<Navigate to=\"/login\" replace />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMe,WAAW,GAAIC,QAAQ,IAAK;IAChC;IACA;IACAF,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAH,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACEJ,OAAA,CAACR,MAAM;IAAAgB,QAAA,eACLR,OAAA;MAAAQ,QAAA,eACER,OAAA,CAACN,MAAM;QAAAc,QAAA,gBAELR,OAAA,CAACP,KAAK;UAACgB,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEV,OAAA,CAACH,SAAS;YAACc,OAAO,EAAEN;UAAY;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGrEf,OAAA,CAACF,YAAY;UACXW,IAAI,EAAC,GAAG;UACRC,OAAO,eAAEV,OAAA,CAACJ,QAAQ;YAACoB,QAAQ,EAAET;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC9CZ,eAAe,EAAEA,eAAgB;UACjCc,YAAY,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eAGFf,OAAA,CAACP,KAAK;UAACgB,IAAI,EAAC,IAAI;UAACC,OAAO,eAAEV,OAAA,CAACL,QAAQ;YAACuB,EAAE,EAAC,QAAQ;YAACC,OAAO;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACb,EAAA,CApCID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}