{"ast":null,"code":"var _jsxFileName = \"/Users/markvadimov/Desktop/bsu/react/notion/src/routes/EditNote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../components/AuthContext\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateNote() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    noteId\n  } = useParams();\n  const [note, setNote] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchNoteData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/notes/${noteId}`);\n        if (response.ok) {\n          const fetchedNote = await response.json();\n          setNote(fetchedNote);\n          setTitle(fetchedNote.title);\n          setBody(fetchedNote.text);\n        } else {\n          console.error(\"Failed to fetch note\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching note:\", error);\n      }\n    };\n    fetchNoteData();\n  }, [noteId]);\n  const validateInputs = () => {\n    const newErrors = {};\n    if (title.trim() === \"\") {\n      newErrors.title = \"Title is required\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n  const handleBodyChange = event => {\n    setBody(event.target.value);\n  };\n  const updateNote = () => {\n    if (validateInputs()) {\n      const updatedNote = {\n        id: noteId,\n        authorId: user.id,\n        title,\n        text: body,\n        createdAt: note.createdAt\n      };\n      fetch(`http://localhost:5001/notes/${noteId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedNote)\n      }).then(response => {\n        if (response.ok) {\n          navigate(`/view-note/${noteId}`);\n        } else {\n          console.error(\"Failed to update note\");\n        }\n      }).catch(error => {\n        console.error(\"Error updating note:\", error);\n      });\n    }\n  };\n  const goBack = () => {\n    navigate(`/notes`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateNote-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-input\",\n          type: \"text\",\n          id: \"editNote-title\",\n          value: title,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"editNote-body\",\n          className: \"note-text\",\n          value: body,\n          onChange: handleBodyChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-button\",\n          onClick: updateNote,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: goBack,\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateNote, \"nAfnUlqcKhJa/jyhiS4b8p25ZWs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateNote;\nvar _c;\n$RefreshReg$(_c, \"UpdateNote\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useParams","useNavigate","Link","AuthContext","Header","jsxDEV","_jsxDEV","UpdateNote","_s","user","noteId","note","setNote","title","setTitle","body","setBody","errors","setErrors","navigate","fetchNoteData","response","fetch","ok","fetchedNote","json","text","console","error","validateInputs","newErrors","trim","Object","keys","length","handleTitleChange","event","target","value","handleBodyChange","updateNote","updatedNote","id","authorId","createdAt","method","headers","JSON","stringify","then","catch","goBack","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/routes/EditNote.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../components/AuthContext\";\r\nimport Header from \"./Header\";\r\n\r\nexport default function UpdateNote() {\r\n  const { user } = useContext(AuthContext);\r\n  const { noteId } = useParams();\r\n  const [note, setNote] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchNoteData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5001/notes/${noteId}`);\r\n        if (response.ok) {\r\n          const fetchedNote = await response.json();\r\n          setNote(fetchedNote);\r\n          setTitle(fetchedNote.title);\r\n          setBody(fetchedNote.text);\r\n        } else {\r\n          console.error(\"Failed to fetch note\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching note:\", error);\r\n      }\r\n    };\r\n\r\n    fetchNoteData();\r\n  }, [noteId]);\r\n\r\n  const validateInputs = () => {\r\n    const newErrors = {};\r\n\r\n    if (title.trim() === \"\") {\r\n      newErrors.title = \"Title is required\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleBodyChange = (event) => {\r\n    setBody(event.target.value);\r\n  };\r\n\r\n  const updateNote = () => {\r\n    if (validateInputs()) {\r\n      const updatedNote = {\r\n        id: noteId,\r\n        authorId: user.id,\r\n        title,\r\n        text: body,\r\n        createdAt: note.createdAt,\r\n      };\r\n\r\n      fetch(`http://localhost:5001/notes/${noteId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedNote),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            navigate(`/view-note/${noteId}`);\r\n          } else {\r\n            console.error(\"Failed to update note\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating note:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const goBack = () => {\r\n    navigate(`/notes`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"updateNote-container\">\r\n        <h1>Edit Note</h1>\r\n        <div>\r\n          <input\r\n            className=\"title-input\"\r\n            type=\"text\"\r\n            id=\"editNote-title\"\r\n            value={title}\r\n            onChange={handleTitleChange}\r\n          />\r\n          <div className=\"error\">{errors.title && <p>{errors.title}</p>}</div>\r\n        </div>\r\n        <div>\r\n          <textarea\r\n            id=\"editNote-body\"\r\n            className=\"note-text\"\r\n            value={body}\r\n            onChange={handleBodyChange}\r\n          />\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <button className=\"update-button\" onClick={updateNote}>\r\n            Update\r\n          </button>\r\n          <button className=\"back-button\" onClick={goBack}>\r\n            Go Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAC/D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAK,CAAC,GAAGZ,UAAU,CAACM,WAAW,CAAC;EACxC,MAAM;IAAEO;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMqB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMqB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BZ,MAAO,EAAC,CAAC;QACrE,IAAIW,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACzCb,OAAO,CAACY,WAAW,CAAC;UACpBV,QAAQ,CAACU,WAAW,CAACX,KAAK,CAAC;UAC3BG,OAAO,CAACQ,WAAW,CAACE,IAAI,CAAC;QAC3B,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;QACvC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAIjB,KAAK,CAACkB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBD,SAAS,CAACjB,KAAK,GAAG,mBAAmB;IACvC;IAEAK,SAAS,CAACY,SAAS,CAAC;IAEpB,OAAOE,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,MAAM,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCtB,QAAQ,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAClCpB,OAAO,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIX,cAAc,CAAC,CAAC,EAAE;MACpB,MAAMY,WAAW,GAAG;QAClBC,EAAE,EAAEhC,MAAM;QACViC,QAAQ,EAAElC,IAAI,CAACiC,EAAE;QACjB7B,KAAK;QACLa,IAAI,EAAEX,IAAI;QACV6B,SAAS,EAAEjC,IAAI,CAACiC;MAClB,CAAC;MAEDtB,KAAK,CAAE,+BAA8BZ,MAAO,EAAC,EAAE;QAC7CmC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACD/B,IAAI,EAAEgC,IAAI,CAACC,SAAS,CAACP,WAAW;MAClC,CAAC,CAAC,CACCQ,IAAI,CAAE5B,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACE,EAAE,EAAE;UACfJ,QAAQ,CAAE,cAAaT,MAAO,EAAC,CAAC;QAClC,CAAC,MAAM;UACLiB,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;QACxC;MACF,CAAC,CAAC,CACDsB,KAAK,CAAEtB,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMuB,MAAM,GAAGA,CAAA,KAAM;IACnBhC,QAAQ,CAAE,QAAO,CAAC;EACpB,CAAC;EAED,oBACEb,OAAA;IAAA8C,QAAA,gBACE9C,OAAA,CAACF,MAAM;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlD,OAAA;MAAKmD,SAAS,EAAC,sBAAsB;MAAAL,QAAA,gBACnC9C,OAAA;QAAA8C,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBlD,OAAA;QAAA8C,QAAA,gBACE9C,OAAA;UACEmD,SAAS,EAAC,aAAa;UACvBC,IAAI,EAAC,MAAM;UACXhB,EAAE,EAAC,gBAAgB;UACnBJ,KAAK,EAAEzB,KAAM;UACb8C,QAAQ,EAAExB;QAAkB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFlD,OAAA;UAAKmD,SAAS,EAAC,OAAO;UAAAL,QAAA,EAAEnC,MAAM,CAACJ,KAAK,iBAAIP,OAAA;YAAA8C,QAAA,EAAInC,MAAM,CAACJ;UAAK;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACNlD,OAAA;QAAA8C,QAAA,eACE9C,OAAA;UACEoC,EAAE,EAAC,eAAe;UAClBe,SAAS,EAAC,WAAW;UACrBnB,KAAK,EAAEvB,IAAK;UACZ4C,QAAQ,EAAEpB;QAAiB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlD,OAAA;QAAKmD,SAAS,EAAC,kBAAkB;QAAAL,QAAA,gBAC/B9C,OAAA;UAAQmD,SAAS,EAAC,eAAe;UAACG,OAAO,EAAEpB,UAAW;UAAAY,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlD,OAAA;UAAQmD,SAAS,EAAC,aAAa;UAACG,OAAO,EAAET,MAAO;UAAAC,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChD,EAAA,CArHuBD,UAAU;EAAA,QAEbP,SAAS,EAKXC,WAAW;AAAA;AAAA4D,EAAA,GAPNtD,UAAU;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}