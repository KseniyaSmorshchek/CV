{"ast":null,"code":"var _jsxFileName = \"/Users/markvadimov/Desktop/bsu/react/notion/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleLogin = async () => {\n    try {\n      // Отправка запроса на сервер для проверки входа\n      const response = await axios.post('http://localhost:3001/login', {\n        email,\n        password\n      });\n\n      // Если вход успешен, переход на HomePage\n      if (response.data.success) {\n        history.push('/home');\n      } else {\n        // Вход неудачен, можно добавить обработку ошибки или отображение сообщения\n        console.log('Invalid email or password');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"KhoxFlMWxXkzg9TaS9xidBqZqGw=\", false, function () {\n  return [useHistory];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useHistory","axios","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","history","handleLogin","response","post","data","success","push","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/markvadimov/Desktop/bsu/react/notion/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const handleLogin = async () => {\n    try {\n      // Отправка запроса на сервер для проверки входа\n      const response = await axios.post('http://localhost:3001/login', {\n        email,\n        password,\n      });\n\n      // Если вход успешен, переход на HomePage\n      if (response.data.success) {\n        history.push('/home');\n      } else {\n        // Вход неудачен, можно добавить обработку ошибки или отображение сообщения\n        console.log('Invalid email or password');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login Page</h2>\n      <form>\n        <label>Email:</label>\n        <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <label>Password:</label>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button type=\"button\" onClick={handleLogin}>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,OAAO,GAAGV,UAAU,CAAC,CAAC;EAE5B,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,6BAA6B,EAAE;QAC/DP,KAAK;QACLE;MACF,CAAC,CAAC;;MAEF;MACA,IAAII,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBL,OAAO,CAACM,IAAI,CAAC,OAAO,CAAC;MACvB,CAAC,MAAM;QACL;QACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBrB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEpB,KAAM;QAACqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9ErB,OAAA;QAAAiB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBrB,OAAA;QAAOsB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAElB,QAAS;QAACmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxFrB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEnB,WAAY;QAAAS,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,SAAS;EAAA,QAGGJ,UAAU;AAAA;AAAA+B,EAAA,GAHtB3B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}